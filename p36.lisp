(defun prime-factors-mult (n)
  (do ((i 2) (res nil) (curn 0))
	  ((= n 1) (reverse (cons (list i curn) res)))
	(if (= (rem n i) 0)
		(progn (incf curn)
			   (setq n (/ n i)))
		(progn (if (> curn 0)
				   (setq res (cons (list i curn) res)))
			   (setq curn 0)
			   (setq i (1+ i))))))
